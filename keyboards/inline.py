# keyboards/inline.py

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Dict, Any


def get_start_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üí≥ –ö—É–ø–∏—Ç—å eSIM", callback_data="buy_esim"),
        InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")
    )
    builder.row(
        InlineKeyboardButton(text="üì± –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å eSIM", callback_data="setup"),
        InlineKeyboardButton(text="‚ùì –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã", callback_data="questions")
    )
    builder.row(
        InlineKeyboardButton(text="üí∞ –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π —Å WorldWideSim", callback_data="partner")
    )

    return builder.as_markup()


def get_buy_esim_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üêº –ê–∑–∏—è", callback_data="region_asia")
    )
    builder.row(
        InlineKeyboardButton(text="üê™ –ë–ª–∏–∂–Ω–∏–π –≤–æ—Å—Ç–æ–∫", callback_data="region_middle_east")
    )
    builder.row(
        InlineKeyboardButton(text="üêå –ï–≤—Ä–æ–ø–∞", callback_data="region_europe")
    )
    builder.row(
        InlineKeyboardButton(text="ü¶Ö –ê–º–µ—Ä–∏–∫–∞", callback_data="region_americas")
    )
    builder.row(
        InlineKeyboardButton(text="üêª –°–ù–ì", callback_data="region_cis")
    )
    builder.row(
        InlineKeyboardButton(text="ü¶Å –ê—Ñ—Ä–∏–∫–∞", callback_data="region_africa")
    )
    builder.row(
        InlineKeyboardButton(text="üê® –û–∫–µ–∞–Ω–∏—è", callback_data="region_oceania")
    )
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")
    )

    return builder.as_markup()


def get_countries_keyboard(region, countries):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∞–º–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞"""
    builder = InlineKeyboardBuilder()

    for country in countries:
        builder.row(
            InlineKeyboardButton(text=country, callback_data=f"country_{country}")
        )

    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="buy_esim")
    )

    return builder.as_markup()


def format_package_button_text(package: Dict[str, Any]) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–∞–∫–µ—Ç–∞"""
    package_name = package.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ")
    volume_bytes = package.get("volume", 0)
    duration = package.get("duration", 0)
    duration_unit = package.get("durationUnit", "DAY")
    price = package.get("price", 0) / 10000  # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –¥–æ–ª–ª–∞—Ä—ã

    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –±–∞–π—Ç–æ–≤ –≤ –ú–ë –∏–ª–∏ –ì–ë
    if volume_bytes >= 1073741824:  # 1 –ì–ë
        volume_str = f"{volume_bytes / 1073741824:.1f} –ì–ë"
    else:
        volume_str = f"{volume_bytes / 1048576:.0f} –ú–ë"

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
    if duration_unit == "DAY":
        duration_str = f"{duration} –¥–Ω–µ–π"
    elif duration_unit == "MONTH":
        duration_str = f"{duration} –º–µ—Å—è—Ü–µ–≤"
    else:
        duration_str = f"{duration} {duration_unit}"

    return f"{package_name} ({volume_str}, {duration_str}) - ${price:.2f}"


def get_packages_keyboard(packages: List[Dict[str, Any]], country_code: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–∞–∫–µ—Ç–∞–º–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã"""
    builder = InlineKeyboardBuilder()

    for i, package in enumerate(packages):
        button_text = format_package_button_text(package)
        builder.row(
            InlineKeyboardButton(text=button_text, callback_data=f"package_{i}")
        )

    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"buy_esim")
    )

    return builder.as_markup()


def get_confirm_keyboard(country_code: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å", callback_data="confirm_purchase")
    )
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ç–∞—Ä–∏—Ñ–∞–º", callback_data=f"country_{country_code}")
    )
    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_purchase")
    )

    return builder.as_markup()


def get_payment_done_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üì± –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ eSIM", callback_data="show_esim_details")
    )

    return builder.as_markup()


def get_back_to_countries_keyboard(region_data: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É —Å—Ç—Ä–∞–Ω"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É —Å—Ç—Ä–∞–Ω", callback_data=region_data)
    )

    return builder.as_markup()


def get_profile_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")
    )

    return builder.as_markup()


def get_setup_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ eSIM"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")
    )

    return builder.as_markup()


def get_questions_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ –≤–æ–ø—Ä–æ—Å–æ–≤"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="–ß—Ç–æ —Ç–∞–∫–æ–µ eSIM?", callback_data="qa_what_is_esim")
    )
    builder.row(
        InlineKeyboardButton(text="–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç?", callback_data="qa_how_to_connect")
    )
    builder.row(
        InlineKeyboardButton(text="–ö–∞–∫–æ–π –ø–∞–∫–µ—Ç –º–Ω–µ –≤—ã–±—Ä–∞—Ç—å?", callback_data="qa_which_package")
    )
    builder.row(
        InlineKeyboardButton(text="–ú–æ–∂–Ω–æ –ª–∏ –∑–≤–æ–Ω–∏—Ç—å –∏ –ø–∏—Å–∞—Ç—å SMS?", callback_data="qa_can_call_sms")
    )
    builder.row(
        InlineKeyboardButton(text="–ú–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç eSIM?", callback_data="qa_phone_support")
    )
    builder.row(
        InlineKeyboardButton(text="–ö–æ–≥–¥–∞ —Å—Ç–∞—Ä—Ç—É–µ—Ç —Ç–∞—Ä–∏—Ñ?", callback_data="qa_when_starts")
    )
    builder.row(
        InlineKeyboardButton(text="–ö–∞–∫ –ø—Ä–æ–¥–ª–∏—Ç—å eSIM?", callback_data="qa_how_extend")
    )
    builder.row(
        InlineKeyboardButton(text="–ú–æ–∂–Ω–æ –ª–∏ –≤–µ—Ä–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏?", callback_data="qa_refund")
    )
    builder.row(
        InlineKeyboardButton(text="–ù–∞—Å–∫–æ–ª—å–∫–æ –±–µ–∑–æ–ø–∞—Å–Ω–∞ eSIM?", callback_data="qa_is_safe")
    )
    builder.row(
        InlineKeyboardButton(text="–ú–æ–∂–Ω–æ –ª–∏ —Ä–∞–∑–¥–∞–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç?", callback_data="qa_share_internet")
    )
    builder.row(
        InlineKeyboardButton(text="–†–∞–±–æ—Ç–∞—é—Ç –ª–∏ WhatsApp –∏ Telegram?", callback_data="qa_messengers_work")
    )
    builder.row(
        InlineKeyboardButton(text="–ß–µ–º eSIM –ª—É—á—à–µ —Ä–æ—É–º–∏–Ω–≥–∞?", callback_data="qa_better_than_roaming")
    )
    builder.row(
        InlineKeyboardButton(text="–ü–æ—á–µ–º—É –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –±—ã–≤–∞–µ—Ç –º–µ–¥–ª–µ–Ω–Ω—ã–º?", callback_data="qa_slow_internet")
    )
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")
    )

    return builder.as_markup()


def get_qa_back_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤–æ–ø—Ä–æ—Å–∞–º"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º", callback_data="questions")
    )

    return builder.as_markup()


def get_back_to_main_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
    )

    return builder.as_markup()


def get_partner_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="partner_referral")
    )
    builder.row(
        InlineKeyboardButton(text="–ú–æ–Ω–µ—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ—Å—Ç–≤–æ", callback_data="partner_community")
    )
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")
    )

    return builder.as_markup()


def get_partner_referral_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üìé –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–æ–º", callback_data="share_referral")
    )
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="partner")
    )

    return builder.as_markup()


def get_partner_community_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üõ† –ü–æ–ª—É—á–∏—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–≥–æ –±–æ—Ç–∞", url="https://t.me/levshurygin")
    )
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="partner")
    )

    return builder.as_markup()


def get_feedback_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="üëç –î–∞", callback_data="feedback_yes"),
        InlineKeyboardButton(text="üòï –ù–µ—Ç", callback_data="feedback_no")
    )

    return builder.as_markup()


def get_feedback_no_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(text="–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="questions")
    )
    builder.row(
        InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", callback_data="support")
    )

    return builder.as_markup()